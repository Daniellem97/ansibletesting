- name: Launch an EC2 instance for testing
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Launch t3.micro EC2 instance 
      amazon.aws.ec2_instance:
        name: "test-instance"
        instance_type: t3.micro
        image_id: ami-0c55b159cbfafe1f0   # example Amazon Linux AMI ID (region-specific)
        region: us-east-1                # ensure this matches the AMIâ€™s region
        wait: true                       # wait until instance is running
      register: ec2_result

    - name: Show new instance ID
      debug:
        msg: "Launched EC2 instance: {{ ec2_result.instance_ids[0] }}"
          
    - name: Create a test S3 bucket 
      amazon.aws.s3_bucket:
        name: "my-ansible-test-bucket-12345"  # bucket name must be globally unique
        state: present
        region: us-east-1
      register: s3_result

    - name: Show S3 bucket creation result
      debug:
        msg: "S3 bucket created: {{ s3_result.bucket.name }}"

    - name: Ensure the test file exists
      file:
        path: /tmp/test_file.txt
        state: touch
        mode: '0644'
- hosts: localhost
  gather_facts: true
  ignore_unreachable: true
  vars_files:
    - vars/default.yml
  tasks:
    - name: Install Apache packages
      become: true
      ansible.builtin.yum:
        name: httpd
        state: present
        use_backend: yum
    - name: Debug Message - Tagged with 'test'
      ansible.builtin.debug:
        msg: "This task should run when the 'test' tag is targeted"
      tags:
      - test

    - name: Ensure the test file exists
      file:
        path: /tmp/test_file.txt
        state: touch
        mode: '0644'

    - name: Create document root
      become: true
      ansible.builtin.file:
        state: directory
        dest: "{{ doc_root }}"
        mode: 0701

    - name: Create configuration file
      become: true
      ansible.builtin.template:
        src: spacelift.conf.j2
        dest: /etc/httpd/conf.d/spacelift.conf
        mode: 0644
      notify: Restart server

    - name: Copy web pages
      become: true
      ansible.builtin.template:
        src: index.html.j2
        dest: "{{ doc_root }}/index.html"
      tags:
        - content

    - name: Ensure httpd is running
      become: true
      ansible.builtin.service:
        name: httpd
        state: started
      ignore_errors: "{{ ansible_check_mode }}"

  handlers:
    - name: Restart server
      become: true
      ansible.builtin.service:
        name: httpd
        state: restarted
      ignore_errors: "{{ ansible_check_mode }}"
